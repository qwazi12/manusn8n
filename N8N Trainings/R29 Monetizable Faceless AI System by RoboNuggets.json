{
  "name": "R29 | Monetizable Faceless AI System by RoboNuggets",
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {}
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        0,
        0
      ],
      "id": "8b56cae6-1861-4642-bfa5-50d569585115",
      "name": "Schedule Trigger"
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4.1",
          "mode": "list",
          "cachedResultName": "GPT-4.1"
        },
        "messages": {
          "values": [
            {
              "content": "=You are an AI designed to generate 1 immersive, viral sea animal idea. Your output must be formatted as a JSON array (single line) and follow all the rules below exactly.\n\nRULES:\n\n1. Only return 1 idea at a time.\n2. The Idea must:\n   - Be under 13 words.\n   - Describe a realistic cleaning or rescue action involving sea animals.\n   - Focus on real-life actions (divers cleaning whales, rescuers removing barnacles, machines cleaning whale skin, etc.).\n   - No fantasy elements (no animal-to-animal rescues, no magical events).\n3. The Title must be:\n   - Short, punchy, and viral-friendly.\n   - Include one relevant emoji.\n   - Include exactly 12 hashtags in this order:\n     ** 4 hashtags relevant to the sea animal idea\n     ** 4 all-time most popular hashtags\n     ** 4 most trending hashtags today (based on live research)\n   - All hashtags must be lowercase.\n4. Set Status to \"for production\" (always).\n5. The Environment must:\n   - Be under 20 words.\n   - Match the action in the Idea exactly (same participants and setting).\n   - Clearly describe:\n     - Where the cleaning or rescue is happening (underwater, on boat deck, open ocean surface, etc.)\n     - Main background details (sunlight beams, overcast sky, misty water, foamy waves, etc.)\n     - Key participants (diver, rescuer team, cleaning machine, etc.)\n     - Style of scene (cinematic realism, gritty documentary, macro close-up, aerial view, etc.)\n   - No fantasy settings.\n\nOUTPUT FORMAT (single-line JSON array):\n\n[\n  {\n    \"Title\": \"Summarized viral sea animal title with emoji #4_relevant_hashtags #4_all_time_popular_hashtags #4_trending_hashtags\",\n    \"Idea\": \"Short immersive sea animal cleaning or rescue idea under 13 words\",\n    \"Environment\": \"Brief vivid setting under 20 words matching the action\",\n    \"Status\": \"for production\"\n  }\n]"
            }
          ]
        },
        "jsonOutput": true,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        140,
        0
      ],
      "id": "6760ba28-fbec-4c42-a3f6-9fffb3a9197d",
      "name": "Create New Idea",
      "credentials": {
        "openAiApi": {
          "id": "NyuhXI96tWK9dR2J",
          "name": "OpenAi account 4"
        }
      }
    },
    {
      "parameters": {
        "content": "## INPUT: Starting Idea",
        "height": 100,
        "width": 500,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -540,
        0
      ],
      "id": "ed2b013e-7b9f-4127-be7a-47a4d2ff06c7",
      "name": "Sticky Note11"
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "1FgwtfdRV3WqRo_nrGOYjmV2zqvb2MY_oAxCDi3HgeZA",
          "mode": "list",
          "cachedResultName": "R29 | Template",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1FgwtfdRV3WqRo_nrGOYjmV2zqvb2MY_oAxCDi3HgeZA/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1FgwtfdRV3WqRo_nrGOYjmV2zqvb2MY_oAxCDi3HgeZA/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "idea": "={{ $json.message.content.Idea }}",
            "caption": "={{ $json.message.content.Title }}",
            "environment_prompt": "={{ $json.message.content.Environment }}",
            "production": "for production",
            "id": "==ROW()-1"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "idea",
              "displayName": "idea",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "caption",
              "displayName": "caption",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "production",
              "displayName": "production",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "environment_prompt",
              "displayName": "environment_prompt",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "final_output",
              "displayName": "final_output",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        -120,
        140
      ],
      "id": "e524a123-2e55-4fd9-86a4-0739ca88a418",
      "name": "Log the Idea",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "WmDBwEhcrLeG9D67",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4.1",
          "mode": "list",
          "cachedResultName": "GPT-4.1"
        },
        "messages": {
          "values": [
            {
              "content": "=You are a prompt-generation AI specializing in cinematic, third-person, still-image prompts. Your task is to generate a **13-scene photo sequence** showing frozen moments of sea animal cleaning or rescue operations.\n\nYour writing must match the following style:\n- Highly detailed, sharp cinematic realism.\n- Wide shots and mid shots showing both the divers and large portions of the whale.\n- Rough, physical cleaning scenes (scraping, spraying, grinding).\n- Strong environmental texture: mist, barnacle dust, sunlight shafts, water spray, wet decks, rough whale skin.\n- Cold, wet, gritty documentary feeling.\n- Absolutely no poetic, emotional, or storytelling language.\n- No fantasy, no movement, no camera terminology.\n\nEach prompt must:\n- Describe **only one frozen cleaning moment** per scene (no transitions, no relaxing, no preparation).\n- Be written in **cinematic third-person** style.\n- Stay **under 500 characters** per scene.\n- Match the provided **Idea** and **Environment** exactly.\n\n---\n\nCore Inputs:\n\n**Idea:** \"{{ $('Create New Idea').item.json.message.content.Idea }}\"\n**Environment:** \"{{ $('Create New Idea').first().json.message.content.Environment }}\"\n\n---\n\n### Format:\n\nIdea: \"...\"\nEnvironment: \"...\"\n\nScene 1: \"...\"\nScene 2: \"...\"\nScene 3: \"...\"\nScene 4: \"...\"\nScene 5: \"...\"\nScene 6: \"...\"\nScene 7: \"...\"\nScene 8: \"...\"\nScene 9: \"...\"\nScene 10: \"...\"\nScene 11: \"...\"\nScene 12: \"...\"\nScene 13: \"...\"\n\n\n---\n\n### Embedded Example Output (TRUE STYLE):\n\nIdea: \"Divers cleaning barnacle clusters off a humpback whale\"\nEnvironment: \"Open ocean, clear sunlight piercing the water, whale covered in dense barnacles\"\n\nScene 1:  \nA full-body shot of a diver gliding near the whale’s vast gray flank, positioning a scraper against thick barnacle patches as sunbeams streak through blue water.\n\nScene 2:  \nSide view of two divers working together along the whale’s scarred back, water swirling with broken shells and drifting debris around them.\n\nScene 3:  \nLow angle shot beneath a diver aiming a high-pressure hose upward at barnacle masses under the whale’s belly, bubbles rising into brilliant sun shafts.\n\nScene 4:  \nTop-down view of a diver pressing a wide scraper into the whale’s fin joint, barnacle chunks peeling away into cloudy plumes.\n\nScene 5:  \nMid-range shot of a diver brushing stubborn barnacles from the base of the whale’s tail, small shells scattering across the glistening surface.\n\nScene 6:  \nCinematic side angle of the whale’s head as a diver scrapes barnacles clustered around its massive eye, dust swirling in the water.\n\nScene 7:  \nA group of divers hovers along the spine, using brushes and scrapers in unison. Broken fragments spin around them under fractured sunlight.\n\nScene 8:  \nClose wide shot of a diver's gloved hand pressing a spatula under barnacles embedded in deep scars, gray dust spreading in the current.\n\nScene 9:  \nA mechanical cleaning arm brushes across the whale’s barnacle-coated back, sending rippling waves of foam into the surrounding sea.\n\nScene 10:  \nLow underwater shot capturing barnacle fragments falling from the cleaned flank like snow, illuminated by shifting sunlight beams.\n\nScene 11:  \nWide shot showing a massive field of loosened barnacles floating over the whale as divers move steadily along its back.\n\nScene 12:  \nSharp side view of a diver spraying low-pressure water onto the whale’s pectoral fin, soft mist clouding the bright blue background.\n\nScene 13:  \nDistant full-body view of the whale gliding through a debris cloud, its freshly cleaned surface gleaming under the scattered sunlight."
            }
          ]
        },
        "jsonOutput": true,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        20,
        140
      ],
      "id": "12eaba90-795b-4608-a445-3bb5b4d4dce9",
      "name": "Generate Prompts",
      "credentials": {
        "openAiApi": {
          "id": "NyuhXI96tWK9dR2J",
          "name": "OpenAi account 4"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "let story;\ntry {\n  const sceneObject = items[0].json.message.content;\n  if (sceneObject && typeof sceneObject === \"object\") {\n    story = Object.entries(sceneObject)\n      .filter(([key, value]) => key.startsWith(\"Scene\"))\n      .map(([key, value]) => value); // <<<< ADD THIS .map() TO GET ONLY SCENE TEXTS\n  } else {\n    throw new Error(\"No valid scene object found.\");\n  }\n} catch (e2) {\n  throw new Error(\"Could not extract scenes properly.\");\n}\n\nlet output = [];\n\nfor (const scene of story) {\n  output.push({ description: scene });\n}\n\nreturn output;"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        300,
        140
      ],
      "id": "3d762c09-9ab5-44ae-987b-6c80d5939158",
      "name": "Unbundle Prompts"
    },
    {
      "parameters": {
        "content": "## | Step 1: Generate Prompts\n",
        "height": 100,
        "width": 540,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -680,
        140
      ],
      "id": "8980bccc-3c98-407e-9bb7-ed45b5f4c1cf",
      "name": "Sticky Note10"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://queue.fal.run/fal-ai/flux-pro",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Key INSERT-API-KEY-HERE"
            }
          ]
        },
        "sendBody": true,
        "contentType": "raw",
        "rawContentType": "application/json",
        "body": "={\n  \"prompt\": \"{{ $json.description }}\",\n  \"image_size\": \"portrait_16_9\"\n}",
        "options": {
          "batching": {
            "batch": {
              "batchSize": 1,
              "batchInterval": 2000
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -240,
        280
      ],
      "id": "9c841adf-f91c-4b00-b7ad-b05f0791fa9c",
      "name": "Create Images"
    },
    {
      "parameters": {
        "url": "=https://queue.fal.run/fal-ai/flux-pro/requests/{{ $json.request_id }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Key INSERT-API-KEY-HERE"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        300,
        280
      ],
      "id": "9eb5c333-15b4-46a9-a571-3feec5515169",
      "name": "Get Images"
    },
    {
      "parameters": {
        "content": "## | Step 2: Generate Images",
        "height": 100,
        "width": 560,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -820,
        280
      ],
      "id": "98eaf847-92cc-4899-9043-f792b04e5b61",
      "name": "Sticky Note6"
    },
    {
      "parameters": {
        "resource": "image",
        "operation": "analyze",
        "modelId": {
          "__rl": true,
          "value": "chatgpt-4o-latest",
          "mode": "list",
          "cachedResultName": "CHATGPT-4O-LATEST"
        },
        "text": "=You are a prompt-generation AI trained to create short, cinematic, third-person video prompts for underwater whale rescue operations.\n\nYou will analyze an uploaded image and create one clear, realistic prompt describing a frozen moment of the cleaning process.\n\nEach prompt must match the style of professional marine rescue documentation.\n\n**Original photo-generation prompt for context:**  \n\"{{ $('Unbundle Prompts').item.json.description }}\"\nUse this only to understand the role, setting, or tone. Do not copy or repeat it.\n\n---\n\n### Rules\n\n- No \"I\" or \"POV\" phrasing.\n- Short third-person sentences (under 300 characters).\n- Only one action (scraping, brushing, spraying).\n- Mention visible environmental textures (debris, barnacle dust, mist, bubbles).\n- No emotional language, no cinematic words like \"camera pans.\"\n- One frozen cleaning action per sentence, no chaining actions.\n- Match cold, rough, realistic underwater marine rescue feeling.\n\n---\n\n### Example Outputs\n\n- Diver scraping barnacles off whale’s side under sunlit water.\n- Water spray clearing barnacle dust from whale’s rough fin.\n- Brush dislodging barnacle shells near whale’s dorsal ridge.\n- Tool peeling thick barnacle growth from whale’s underbelly.\n- Mist rising as diver blasts barnacle patches from whale’s back.\n- Shell fragments swirling as diver scrapes whale’s pectoral fin.\n- Gloved hand lifting barnacles off whale’s ridged tail surface.\n\n---\n\nUse the uploaded image and matching description to generate one short underwater whale cleaning prompt in this style.",
        "imageUrls": "={{ $json.images[0].url }}",
        "options": {
          "detail": "high"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        -460,
        420
      ],
      "id": "1173eb79-a3ea-47f7-8097-ed8fe5fb4eff",
      "name": "Video Prompts",
      "credentials": {
        "openAiApi": {
          "id": "NyuhXI96tWK9dR2J",
          "name": "OpenAi account 4"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://queue.fal.run/fal-ai/kling-video/v1.6/pro/image-to-video",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Key INSERT-API-KEY-HERE"
            }
          ]
        },
        "sendBody": true,
        "contentType": "raw",
        "rawContentType": "application/json",
        "body": "={\n  \"prompt\": \"{{ $json.content }}\",\n  \"image_url\": \"{{ $('Get Images').item.json.images[0].url }}\",\n  \"duration\": \"5\",\n  \"aspect_ratio\": \"9:16\",\n  \"negative_prompt\": \"bad quality\",\n  \"cfg_scale\": 0.5\n}",
        "options": {
          "batching": {
            "batch": {
              "batchSize": 1,
              "batchInterval": 2000
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -240,
        420
      ],
      "id": "249181b5-e363-48dc-ab21-d205a3c1f554",
      "name": "Create Video"
    },
    {
      "parameters": {
        "url": "=https://queue.fal.run/fal-ai/kling-video/requests/{{ $json.request_id }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Key INSERT-API-KEY-HERE"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        300,
        420
      ],
      "id": "a9702e02-653d-4588-bf07-f4da0d7546d2",
      "name": "Get Video"
    },
    {
      "parameters": {
        "content": "## | Step 3: Generate Videos",
        "height": 100,
        "width": 500,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -980,
        420
      ],
      "id": "b728c990-6942-4836-8f6f-2d5105081036",
      "name": "Sticky Note7"
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4.1",
          "mode": "list",
          "cachedResultName": "GPT-4.1"
        },
        "messages": {
          "values": [
            {
              "content": "=Generate a concise, immersive sound description for Eleven Labs based on the given environment. Remove unnecessary words and limit the output to 250 characters max, including spaces and symbols. The description must be precise, clear, and logically match the environment. No extra details, just essential sound characteristics.\n\nEnvironment Idea: {{ $('Log the Idea').item.json.environment_prompt }}\nPhoto Idea: {{ $('Get Images').item.json.prompt }}\nVideo Idea: {{ $('Video Prompts').item.json.content }}"
            }
          ]
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        -620,
        560
      ],
      "id": "3597a487-50df-4703-abb1-95a879c2a6c8",
      "name": "Sound Prompts",
      "credentials": {
        "openAiApi": {
          "id": "NyuhXI96tWK9dR2J",
          "name": "OpenAi account 4"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://queue.fal.run/fal-ai/mmaudio-v2 ",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Key INSERT-API-KEY-HERE"
            }
          ]
        },
        "sendBody": true,
        "contentType": "raw",
        "rawContentType": "application/json",
        "body": "= {\n        \"prompt\": \"ambient musical background sounds for this idea: Underwater, sunbeams filter through blue water, whale and divers framed in cinematic realism, the action is: {{ $json.message.content }}\",\n        \"duration\": 5,\n        \"video_url\": \"{{ $('Get Video').item.json.video.url }}\"\n  }",
        "options": {
          "batching": {
            "batch": {
              "batchSize": 1,
              "batchInterval": 2000
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -240,
        560
      ],
      "id": "4e0a0227-cff3-4f38-9803-b345fd092bdb",
      "name": "Create Sounds"
    },
    {
      "parameters": {
        "url": "=https://queue.fal.run/fal-ai/mmaudio-v2/requests/{{ $json.request_id }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Key INSERT-API-KEY-HERE"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        300,
        560
      ],
      "id": "9a2398eb-a916-4064-bc0b-accfcaf3888e",
      "name": "Get Sounds"
    },
    {
      "parameters": {
        "content": "## | Step 4: Generate Sounds",
        "height": 100,
        "width": 480,
        "color": 2
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1120,
        560
      ],
      "id": "502006f2-bf77-473e-a357-e926e9454cee",
      "name": "Sticky Note8"
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineByPosition",
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.1,
      "position": [
        -740,
        720
      ],
      "id": "78bb29c3-7643-4965-b747-ae08915b552f",
      "name": "Merge"
    },
    {
      "parameters": {
        "jsCode": "return [\n  {\n    video_urls: items.map(item => item.json.video.url)\n  }\n];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -460,
        720
      ],
      "id": "b56135ca-8668-46b1-be2c-4098a36e1a07",
      "name": "List Elements"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://queue.fal.run/fal-ai/ffmpeg-api/compose",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Key INSERT-API-KEY-HERE"
            }
          ]
        },
        "sendBody": true,
        "contentType": "raw",
        "rawContentType": "application/json",
        "body": "={\n  \"tracks\": [\n    {\n      \"id\": \"1\",\n      \"type\": \"video\",\n      \"keyframes\": [\n        { \"url\": \"{{ $json.video_urls[0] }}\", \"timestamp\": 0, \"duration\": 5 },\n        { \"url\": \"{{ $json.video_urls[1] }}\", \"timestamp\": 5, \"duration\": 5 },\n        { \"url\": \"{{ $json.video_urls[2] }}\", \"timestamp\": 10, \"duration\": 5 },\n        { \"url\": \"{{ $json.video_urls[3] }}\", \"timestamp\": 15, \"duration\": 5 },\n        { \"url\": \"{{ $json.video_urls[4] }}\", \"timestamp\": 20, \"duration\": 5 },\n        { \"url\": \"{{ $json.video_urls[5] }}\", \"timestamp\": 25, \"duration\": 5 },\n        { \"url\": \"{{ $json.video_urls[6] }}\", \"timestamp\": 30, \"duration\": 5 },\n        { \"url\": \"{{ $json.video_urls[7] }}\", \"timestamp\": 35, \"duration\": 5 },\n        { \"url\": \"{{ $json.video_urls[8] }}\", \"timestamp\": 40, \"duration\": 5 },\n        { \"url\": \"{{ $json.video_urls[9] }}\", \"timestamp\": 45, \"duration\": 5 },\n        { \"url\": \"{{ $json.video_urls[10] }}\", \"timestamp\": 50, \"duration\": 5 },\n        { \"url\": \"{{ $json.video_urls[11] }}\", \"timestamp\": 55, \"duration\": 5 },\n        { \"url\": \"{{ $json.video_urls[12] }}\", \"timestamp\": 60, \"duration\": 5 }\n      ]\n    }\n  ]\n}",
        "options": {
          "batching": {
            "batch": {
              "batchSize": 1,
              "batchInterval": 2000
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -240,
        720
      ],
      "id": "3c888b0d-d381-4bdf-97ca-364e358cafce",
      "name": "Sequence Video"
    },
    {
      "parameters": {
        "url": "=https://queue.fal.run/fal-ai/ffmpeg-api/requests/{{ $json.request_id }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Key INSERT-API-KEY-HERE"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        300,
        720
      ],
      "id": "577d34fb-6cae-4811-93b1-9c600e303f59",
      "name": "Get Final Video"
    },
    {
      "parameters": {
        "content": "## OUTPUT: Final Video",
        "height": 100,
        "width": 420,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1180,
        720
      ],
      "id": "0a6a0136-c9b4-44e4-a1a2-f0af98e1beab",
      "name": "Sticky Note9"
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "1FgwtfdRV3WqRo_nrGOYjmV2zqvb2MY_oAxCDi3HgeZA",
          "mode": "list",
          "cachedResultName": "R29 | Template",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1FgwtfdRV3WqRo_nrGOYjmV2zqvb2MY_oAxCDi3HgeZA/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1FgwtfdRV3WqRo_nrGOYjmV2zqvb2MY_oAxCDi3HgeZA/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "idea": "={{ $('Log the Idea').first().json.idea }}",
            "production": "done",
            "final_output": "={{ $json.video_url }}"
          },
          "matchingColumns": [
            "idea"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "idea",
              "displayName": "idea",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "caption",
              "displayName": "caption",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "production",
              "displayName": "production",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "environment_prompt",
              "displayName": "environment_prompt",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "final_output",
              "displayName": "final_output",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "row_number",
              "displayName": "row_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "readOnly": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        -1340,
        720
      ],
      "id": "c96dd470-2b8c-48f0-b0a0-bb46b8ac85b7",
      "name": "Log Final Video",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "WmDBwEhcrLeG9D67",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "amount": 600
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        40,
        420
      ],
      "id": "ab4d28cc-0150-4242-8bd0-423c174fc35d",
      "name": "Wait for Video",
      "webhookId": "6bf5ec56-7e77-436f-a134-05ad3e2c7f0e"
    },
    {
      "parameters": {
        "amount": 180
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        40,
        560
      ],
      "id": "644c63db-7e4a-478f-be40-8337f1119416",
      "name": "Wait for Sounds",
      "webhookId": "6bf5ec56-7e77-436f-a134-05ad3e2c7f0e"
    },
    {
      "parameters": {
        "amount": 240
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        40,
        720
      ],
      "id": "276f2886-ace1-48b6-a5ee-c511f8dd567e",
      "name": "Wait for Final Video",
      "webhookId": "6bf5ec56-7e77-436f-a134-05ad3e2c7f0e"
    },
    {
      "parameters": {
        "amount": 180
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        40,
        280
      ],
      "id": "cd27c85a-732b-4cf1-8a28-d49749fd192e",
      "name": "Wait for Images",
      "webhookId": "6bf5ec56-7e77-436f-a134-05ad3e2c7f0e"
    }
  ],
  "pinData": {},
  "connections": {
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Create New Idea",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create New Idea": {
      "main": [
        [
          {
            "node": "Log the Idea",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Log the Idea": {
      "main": [
        [
          {
            "node": "Generate Prompts",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate Prompts": {
      "main": [
        [
          {
            "node": "Unbundle Prompts",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Unbundle Prompts": {
      "main": [
        [
          {
            "node": "Create Images",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create Images": {
      "main": [
        [
          {
            "node": "Wait for Images",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Images": {
      "main": [
        [
          {
            "node": "Video Prompts",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Video Prompts": {
      "main": [
        [
          {
            "node": "Create Video",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create Video": {
      "main": [
        [
          {
            "node": "Wait for Video",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Video": {
      "main": [
        [
          {
            "node": "Sound Prompts",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Sound Prompts": {
      "main": [
        [
          {
            "node": "Create Sounds",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create Sounds": {
      "main": [
        [
          {
            "node": "Wait for Sounds",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Sounds": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "List Elements",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "List Elements": {
      "main": [
        [
          {
            "node": "Sequence Video",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Sequence Video": {
      "main": [
        [
          {
            "node": "Wait for Final Video",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Final Video": {
      "main": [
        [
          {
            "node": "Log Final Video",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait for Video": {
      "main": [
        [
          {
            "node": "Get Video",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait for Sounds": {
      "main": [
        [
          {
            "node": "Get Sounds",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait for Final Video": {
      "main": [
        [
          {
            "node": "Get Final Video",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait for Images": {
      "main": [
        [
          {
            "node": "Get Images",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "7e90b3f3-a94d-4ba0-ad23-a1696d346547",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "addaa68bf5af965c06c3765c811549851eb65db8df4677e0c6253726ffcac493"
  },
  "id": "ipzlmLzLZZdSjllw",
  "tags": []
}